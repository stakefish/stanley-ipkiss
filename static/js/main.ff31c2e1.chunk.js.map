{"version":3,"sources":["helpers/const.ts","core/Controller.tsx","helpers/hooks.ts","core/Layout.tsx","containers/ControlBoard/index.tsx","helpers/utils.ts","containers/ArtBoard/styled.tsx","containers/ArtBoard/index.tsx","core/App.tsx","index.tsx"],"names":["ONE_RADIAN_IN_DEGREES","Math","PI","ControllerContext","React","createContext","ControllerProvider","children","faceRef","useRef","artboardRef","useState","file","setFile","active","setActive","masks","setMasks","angles","setAngles","scales","setScales","coordinates","setCoordinates","create","useCallback","mask","angle","position","rotate","update","move","translation","scale","select","index","save","a","current","toPng","canvasWidth","naturalWidth","canvasHeight","naturalHeight","source","downloadjs","console","error","clear","drop","URL","createObjectURL","Provider","value","useController","useContext","Layout","theme","colors","fontSize","fontWeight","DndProvider","backend","HTML5Backend","ControlBoard","useDropzone","accept","onDrop","getRootProps","getInputProps","isDragActive","size","onClick","min","max","onChange","step","angleBetweenPoints","left","right","dy","y","dx","x","atan2","average","points","isNil","reduce","total","point","length","detectFaceLandmarks","face","artBoard","options","TinyFaceDetectorOptions","detectSingleFace","withFaceLandmarks","detector","nose","landmarks","getNose","leftEye","getLeftEye","rightEye","getRightEye","offsetWidth","rotation","offsetHeight","Image","styled","img","props","Board","div","Box","Cover","ArtBoard","detect","positionOffset","useEffect","ref","map","handle","onStop","_","width","height","src","App","setError","load","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","ready","useFaceAPI","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff31c2e1.chunk.js","sourcesContent":["export const ONE_RADIAN_IN_DEGREES = 180 / Math.PI\n\nexport const ACTIVE_MASK_DEFAULT = 0\n\nexport const SCALE_FACTOR = 2\n\nexport const CONTROLLER_ROTATION_DEFAULT = 0\nexport const CONTROLLER_ROTATION_MIN = -180\nexport const CONTROLLER_ROTATION_MAX = 180\n\nexport const CONTROLLER_SCALE_DEFAULT = 1\nexport const CONTROLLER_SCALE_MIN = 0\nexport const CONTROLLER_SCALE_MAX = 2\nexport const CONTROLLER_SCALE_STEP = 0.01\n\nexport const MASK = \"mask.png\"\n\nexport const MASK_WIDTH = 288\nexport const MASK_HEIGHT = 130\n","import React, { MutableRefObject, ReactNode, useCallback, useRef, useState } from \"react\"\nimport downloadjs from \"downloadjs\"\nimport { update } from \"ramda\"\nimport { toPng } from \"html-to-image\"\nimport { IPoint } from \"face-api.js\"\n\nimport { ACTIVE_MASK_DEFAULT, CONTROLLER_SCALE_DEFAULT } from \"../helpers/const\"\n\ninterface ContextType {\n  file?: string\n  masks?: string[]\n  angles: number[]\n  scales: number[]\n  coordinates: IPoint[]\n  active: number\n  faceRef?: MutableRefObject<HTMLImageElement | null>\n  artboardRef?: MutableRefObject<HTMLDivElement | null>\n  save: () => void\n  clear: () => void\n  select: (index: number) => void\n  rotate: (rotation: number) => void\n  scale: (scale: number) => void\n  move: (translate: IPoint) => void\n  create: (mask: string, angle: number, translation: IPoint) => void\n  drop: (files: File[]) => void\n}\n\ninterface Props {\n  children: ReactNode | JSX.Element | JSX.Element[]\n}\n\nconst ControllerContext: React.Context<ContextType> = React.createContext({} as ContextType)\n\nexport const ControllerProvider: React.FC<Props> = ({ children }: Props) => {\n  const faceRef = useRef<HTMLImageElement>(null)\n  const artboardRef = useRef<HTMLDivElement>(null)\n\n  const [file, setFile] = useState<string | undefined>()\n  const [active, setActive] = useState<number>(ACTIVE_MASK_DEFAULT)\n\n  const [masks, setMasks] = useState<string[]>([])\n  const [angles, setAngles] = useState<number[]>([])\n  const [scales, setScales] = useState<number[]>([])\n  const [coordinates, setCoordinates] = useState<IPoint[]>([])\n\n  const create = useCallback(\n    (mask: string, angle: number, position: IPoint) => {\n      setMasks([...masks, mask])\n      setAngles([...angles, angle])\n      setScales([...scales, CONTROLLER_SCALE_DEFAULT])\n      setCoordinates([...coordinates, position])\n    },\n    [masks, coordinates, angles, scales]\n  )\n\n  const rotate = useCallback(\n    (angle: number) => {\n      setAngles(update(active, angle))\n    },\n    [active, angles]\n  )\n\n  const move = useCallback(\n    (translation: IPoint) => {\n      setCoordinates(update(active, translation))\n    },\n    [active, coordinates]\n  )\n\n  const scale = useCallback(\n    (scale: number) => {\n      setScales(update(active, scale))\n    },\n    [active, scales]\n  )\n\n  const select = useCallback(\n    (index: number) => {\n      setActive(index)\n    },\n    [active]\n  )\n\n  const save = useCallback(async () => {\n    if (faceRef?.current && artboardRef?.current) {\n      try {\n        const source = await toPng(artboardRef.current, {\n          canvasWidth: faceRef.current.naturalWidth,\n          canvasHeight: faceRef.current.naturalHeight\n        })\n        downloadjs(source, \"mask.png\")\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }, [active])\n\n  const clear = useCallback(() => {\n    setMasks([])\n    setAngles([])\n    setCoordinates([])\n    setActive(ACTIVE_MASK_DEFAULT)\n  }, [active])\n\n  const drop = useCallback(\n    ([file]: File[]) => {\n      clear()\n      setFile(URL.createObjectURL(file))\n    },\n    [file]\n  )\n\n  return (\n    <ControllerContext.Provider\n      value={{\n        faceRef,\n        artboardRef,\n        file,\n        masks,\n        angles,\n        scales,\n        coordinates,\n        rotate,\n        scale,\n        active,\n        move,\n        select,\n        clear,\n        create,\n        save,\n        drop\n      }}\n    >\n      {children}\n    </ControllerContext.Provider>\n  )\n}\n\nexport default ControllerContext\n","import { useContext, useEffect, useState } from \"react\"\nimport { nets } from \"face-api.js\"\nimport { isNil } from \"ramda\"\n\nimport ControllerContext from \"../core/Controller\"\n\nexport const useController = () => {\n  return useContext(ControllerContext)\n}\n\nexport const useFaceAPI = () => {\n  const [error, setError] = useState<any>()\n\n  const load = async () => {\n    try {\n      await Promise.all([nets.tinyFaceDetector.loadFromUri(\"models\"), nets.faceLandmark68Net.loadFromUri(\"models\")])\n    } catch (error) {\n      setError(error)\n    }\n  }\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  const ready = isNil(error)\n\n  return {\n    ready,\n    error\n  } as const\n}\n","import React, { ReactNode } from \"react\"\nimport { ThemeProvider } from \"styled-components\"\nimport { DndProvider } from \"react-dnd\"\nimport { HTML5Backend } from \"react-dnd-html5-backend\"\n\nimport { ControllerProvider } from \"./Controller\"\n\ninterface Props {\n  children: JSX.Element | JSX.Element[] | ReactNode\n}\n\nconst Layout: React.FC<Props> = ({ children }: Props) => {\n  const theme = {\n    colors: {},\n    fontSize: {},\n    fontWeight: {}\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <DndProvider backend={HTML5Backend}>\n        <ControllerProvider>{children}</ControllerProvider>\n      </DndProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default Layout\n","import \"@reach/slider/styles.css\"\n\nimport React from \"react\"\nimport { useDropzone } from \"react-dropzone\"\nimport { SliderInput, SliderTrack, SliderRange, SliderHandle, SliderMarker } from \"@reach/slider\"\n\nimport {\n  CONTROLLER_ROTATION_DEFAULT,\n  CONTROLLER_ROTATION_MIN,\n  CONTROLLER_ROTATION_MAX,\n  CONTROLLER_SCALE_DEFAULT,\n  CONTROLLER_SCALE_MIN,\n  CONTROLLER_SCALE_MAX,\n  CONTROLLER_SCALE_STEP\n} from \"../../helpers/const\"\n\nimport { useController } from \"../../helpers/hooks\"\n\nconst ControlBoard: React.FC = () => {\n  const { angles, scales, active, rotate, scale, save, drop } = useController()\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ accept: \"image/*\", onDrop: drop })\n\n  const size = scales?.[active] ?? CONTROLLER_SCALE_DEFAULT\n  const angle = angles?.[active] ?? CONTROLLER_ROTATION_DEFAULT\n\n  return (\n    <>\n      <button onClick={save}>Download</button>\n\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? <p>Drop the files here ...</p> : <p>Drag 'n' drop some files here, or click to select files</p>}\n      </div>\n\n      <i>Angle: {angle}</i>\n\n      <SliderInput value={angle} min={CONTROLLER_ROTATION_MIN} max={CONTROLLER_ROTATION_MAX} onChange={rotate}>\n        <SliderTrack>\n          <SliderRange />\n          <SliderHandle />\n          <SliderMarker value={angle} />\n        </SliderTrack>\n      </SliderInput>\n\n      <i>Scale: {size}</i>\n\n      <SliderInput\n        value={size}\n        min={CONTROLLER_SCALE_MIN}\n        max={CONTROLLER_SCALE_MAX}\n        step={CONTROLLER_SCALE_STEP}\n        onChange={scale}\n      >\n        <SliderTrack>\n          <SliderRange />\n          <SliderHandle />\n          <SliderMarker value={size} />\n        </SliderTrack>\n      </SliderInput>\n    </>\n  )\n}\n\nexport default ControlBoard\n","import { detectSingleFace, TinyFaceDetectorOptions, Point, IPoint } from \"face-api.js\"\nimport { isNil } from \"ramda\"\n\nimport { ONE_RADIAN_IN_DEGREES, CONTROLLER_ROTATION_DEFAULT, SCALE_FACTOR } from \"../helpers/const\"\n\nexport const angleBetweenPoints = (left: IPoint, right: IPoint) => {\n  const dy = right.y - left.y\n  const dx = right.x - left.x\n  const theta = Math.atan2(dy, dx)\n\n  return theta * ONE_RADIAN_IN_DEGREES\n}\n\nexport const average = (points: Point[] | undefined): IPoint | undefined => {\n  if (isNil(points)) {\n    return undefined\n  }\n\n  const { x, y } = points.reduce(\n    (total, point) => ({\n      x: total.x + point.x,\n      y: total.y + point.y\n    }),\n    { x: 0, y: 0 }\n  )\n\n  return {\n    x: x / points.length,\n    y: y / points.length\n  }\n}\n\nexport const detectFaceLandmarks = async (face: HTMLImageElement, artBoard: HTMLDivElement) => {\n  const options = new TinyFaceDetectorOptions()\n  const detector = await detectSingleFace(face, options).withFaceLandmarks()\n\n  const nose = average(detector?.landmarks.getNose())\n  const leftEye = average(detector?.landmarks.getLeftEye())\n  const rightEye = average(detector?.landmarks.getRightEye())\n  const scale = artBoard.offsetWidth / face.naturalWidth\n\n  if (leftEye && rightEye && nose) {\n    return {\n      position: {\n        x: nose.x * scale,\n        y: Math.min(leftEye.y, rightEye.y) * scale\n      },\n      rotation: angleBetweenPoints(leftEye, rightEye)\n    } as const\n  }\n\n  return {\n    position: {\n      x: artBoard.offsetWidth / SCALE_FACTOR,\n      y: artBoard.offsetHeight / SCALE_FACTOR\n    },\n    rotation: CONTROLLER_ROTATION_DEFAULT\n  } as const\n}\n","import styled from \"styled-components\"\n\ninterface ImageProps {\n  angle: number\n  scale: number\n}\n\nexport const Image = styled.img<ImageProps>`\n  cursor: move;\n  display: block;\n  user-drag: none;\n  transform: ${(props) => `rotate(${props.angle}deg) scale(${props.scale})`};\n`\n\nexport const Board = styled.div`\n  max-width: 500px;\n  overflow: hidden;\n  user-select: none;\n  position: relative;\n`\n\nexport const Box = styled.div`\n  position: absolute;\n`\n\nexport const Cover = styled.img`\n  width: 100%;\n  display: block;\n  user-drag: none;\n`\n","import React, { useCallback, useEffect } from \"react\"\nimport Draggable from \"react-draggable\"\nimport { IPoint } from \"face-api.js\"\n\nimport { MASK, MASK_WIDTH, MASK_HEIGHT, SCALE_FACTOR } from \"../../helpers/const\"\n\nimport { useController } from \"../../helpers/hooks\"\nimport { detectFaceLandmarks } from \"../../helpers/utils\"\n\nimport { Board, Image, Cover, Box } from \"./styled\"\n\nconst ArtBoard: React.FC = () => {\n  const { artboardRef, faceRef, file, masks, scales, angles, coordinates, create, select, move } = useController()\n\n  const detect = useCallback(async () => {\n    if (faceRef?.current && artboardRef?.current) {\n      const { rotation, position } = await detectFaceLandmarks(faceRef.current, artboardRef.current)\n      create(MASK, rotation, position)\n    }\n  }, [file, faceRef, artboardRef])\n\n  const width = MASK_WIDTH\n  const height = MASK_HEIGHT\n\n  const positionOffset = {\n    x: -width / SCALE_FACTOR,\n    y: -height / SCALE_FACTOR\n  }\n\n  useEffect(() => {\n    detect()\n  }, [file, faceRef])\n\n  return (\n    <Board ref={artboardRef}>\n      {masks?.map((mask, index) => (\n        <Draggable\n          key={index}\n          handle=\"img\"\n          position={coordinates?.[index]}\n          positionOffset={positionOffset}\n          onStop={(_, point) => move(point as IPoint)}\n        >\n          <Box key={index}>\n            <Image\n              width={width}\n              height={height}\n              src={mask}\n              angle={angles[index]}\n              scale={scales[index]}\n              onClick={() => select(index)}\n            />\n          </Box>\n        </Draggable>\n      ))}\n\n      {file ? <Cover src={file} ref={faceRef} /> : null}\n    </Board>\n  )\n}\n\nexport default ArtBoard\n","import React from \"react\"\n\nimport { useFaceAPI } from \"../helpers/hooks\"\n\nimport Layout from \"./Layout\"\n\nimport ControlBoard from \"../containers/ControlBoard\"\nimport ArtBoard from \"../containers/ArtBoard\"\n\nconst App: React.FC = () => {\n  const { ready, error } = useFaceAPI()\n\n  return (\n    <Layout>\n      {ready ? (\n        <>\n          <ControlBoard />\n          <ArtBoard />\n        </>\n      ) : null}\n\n      {error ? <span>aw, snap!</span> : null}\n    </Layout>\n  )\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\n\nimport App from \"./core/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}